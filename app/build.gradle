apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'realm-android'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.carles.carleskotlin"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner rootProject.ext.testInstrumentationRunner
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        main.java.srcDirs += [file("$buildDir/generated/source/kapt/main")]
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }
}

androidExtensions {
    experimental = true
}

dependencies {
    implementation appDependencies.kotlin
    implementation appDependencies.design
    implementation appDependencies.recyclerview
    implementation appDependencies.constraintLayout
    implementation appDependencies.support
    implementation appDependencies.rxJava
    implementation appDependencies.rxAndroid
    implementation appDependencies.retrofit
    implementation appDependencies.retrofitConverterGson
    implementation appDependencies.retrofitAdapterRxJava
    implementation appDependencies.koin
    implementation appDependencies.koinScope
    implementation appDependencies.koinViewModel
    implementation appDependencies.lifecycleExtensions
    implementation appDependencies.roomRuntime
    kapt appDependencies.roomCompiler

    implementation appDependencies.dagger
    kapt appDependencies.daggerCompiler
    kapt appDependencies.daggerAndroidProcessor
    implementation appDependencies.daggerAndroidSupport

    testImplementation appDependencies.jUnit
    testImplementation appDependencies.mockito
    testImplementation appDependencies.powermockApi
    testImplementation appDependencies.powermockModule
    testImplementation appDependencies.kluent
}
